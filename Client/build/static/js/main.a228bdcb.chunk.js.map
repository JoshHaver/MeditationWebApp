{"version":3,"sources":["getHumanReadableDate.js","allSessions.js","LoadingScreen.js","useFetch.js","Sessions.js","Navbar.js","sendSessionToServer.js","CreateOrUpdateSession.js","Home.js","NotFound.js","DisplaySingleSession.js","SessionDetails.js","App.js","index.js"],"names":["getHumanReadableDate","date","Date","Number","toDateString","ShowAllSessions","sessions","className","map","session","to","SessionID","style","textDecoration","dateMilliseconds","sessionLength","sessionRating","sleepLength","moodRating","LoadingScreen","useFetch","url","useState","data","setData","isLoading","setIsLoading","error","setError","useEffect","abortController","AbortController","fetch","signal","then","res","ok","json","Promise","reject","catch","err","name","console","log","abort","Sessions","Items","Navbar","color","backgroundColor","borderRadius","sendSessionToServer","method","id","a","uniqueID","Math","floor","random","now","payload","axios","post","put","CreateOrUpdateSession","editMode","setSessionLength","setSessionRating","setSleepLength","setMoodRating","history","useHistory","handleSubmit","e","preventDefault","push","onSubmit","type","required","min","placeholder","value","onChange","target","max","Home","NotFound","DisplaySingleSession","isEditMode","setIsEditMode","onClick","delete","SessionDetails","useParams","Item","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a228bdcb.chunk.js","sourcesContent":["let getHumanReadableDate = date => {\r\n    let d = new Date(Number(date))\r\n    return d.toDateString()\r\n}\r\nexport default getHumanReadableDate","import { Link } from 'react-router-dom'\r\nimport getHumanReadableDate from './getHumanReadableDate'\r\nlet ShowAllSessions = ({ sessions }) => {\r\n    return (\r\n        <div className=\"all-sessions\">\r\n            {sessions.map((session) => (\r\n                <div className='all-sessions' key={session.SessionID}>\r\n                    <Link to={`/sessions/${session.SessionID}`} style={{ textDecoration: 'none' }}>\r\n                        <h2>{getHumanReadableDate(session.dateMilliseconds)}</h2>\r\n                        {session.sessionLength && <p>Session Length: {session.sessionLength}</p>}\r\n                        {session.sessionRating && <p>Session Rating: {session.sessionRating}</p>}\r\n                        {session.sleepLength && <p>Sleep Length: {session.sleepLength}</p>}\r\n                        {session.moodRating && <p>Mood Rating: {session.moodRating}</p>}\r\n                    </Link>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShowAllSessions","import React from 'react'\r\n\r\nexport default function LoadingScreen() {\r\n\r\n    return (\r\n        <div className='loading-screen'>\r\n            <h2>Loading...</h2>\r\n        </div>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\n\r\nconst useFetch = (url) => {\r\n\r\n    let [data, setData] = useState(null)\r\n    let [isLoading, setIsLoading] = useState(true)\r\n    let [error, setError] = useState(null)\r\n\r\n    \r\n    useEffect(() => {\r\n        const abortController = new AbortController()\r\n\r\n        fetch(url, {signal: abortController.signal})\r\n            .then(res => {\r\n                if (!res.ok){\r\n                    setError(\"Res.ok returned false\")\r\n                    setIsLoading(false)\r\n                    return Promise.reject(res)\r\n                }else{\r\n                    return res.json()\r\n                }\r\n            })\r\n            .then(data => {\r\n                setData(data)\r\n                setIsLoading(false)\r\n                setError(null)\r\n            })\r\n            .catch(err => {\r\n                if (err.name === 'AbortError') {\r\n                    console.log('Fetch aborted')\r\n                }else{\r\n                    setError(\"Could not find the resource at the provided url\")\r\n                    setIsLoading(false)\r\n                }\r\n            })\r\n        return () => abortController.abort()\r\n    }, [url])\r\n\r\n    \r\n    return { data, isLoading, error }\r\n}\r\nexport default useFetch","import ShowAllSessions from './allSessions'\r\nimport LoadingScreen from './LoadingScreen'\r\nimport useFetch from './useFetch'\r\n\r\nlet Sessions = () => {\r\n    let {data: sessions, isLoading, error } = useFetch('http://localhost:8081/api/v1/sessions')\r\n    return ( \r\n        <div className=\"show-sessions\">\r\n            {isLoading && <div className=\"loading-screen\"><LoadingScreen /></div>}\r\n            {error && <div> {error} </div>}\r\n            {sessions && <ShowAllSessions sessions={sessions.Items}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sessions","import { Link } from 'react-router-dom'\r\n\r\nlet Navbar = () => {\r\n    return (\r\n      <nav className=\"navbar\">\r\n        <h1>Meditation Tracker</h1>\r\n        <div className=\"links\">\r\n          <Link to=\"/\">Home</Link>\r\n          <Link to=\"/sessions\">All Sessions</Link>\r\n          <Link to=\"/create\" style={{ \r\n            color: 'white', \r\n            backgroundColor: '#f1356d',\r\n            borderRadius: '8px' \r\n          }}>New Session</Link>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n   \r\n  export default Navbar;","import axios from 'axios'\r\n\r\nlet sendSessionToServer = async (method, sessionLength, sessionRating, sleepLength, moodRating, id, date) => {\r\n    const uniqueID = Math.floor(Math.random() * 10000000000)\r\n    const dateMilliseconds = Date.now()\r\n    let payload = {}\r\n    if (method === 'post'){\r\n        payload.SessionID = uniqueID\r\n        payload.dateMilliseconds = dateMilliseconds\r\n    }else{\r\n        payload.SessionID = id\r\n        payload.dateMilliseconds = date\r\n    }\r\n    if (sessionLength !== ''){\r\n        payload.sessionLength = sessionLength\r\n    }\r\n    if (sessionRating !== ''){\r\n        payload.sessionRating = sessionRating\r\n    }\r\n    if (sleepLength !== ''){\r\n        payload.sleepLength = sleepLength\r\n    }\r\n    if (moodRating !== ''){\r\n        payload.moodRating = moodRating\r\n    }\r\n    console.log(payload)\r\n    try {\r\n        if (method === 'post'){\r\n            await axios.post('http://localhost:8081/api/v1/create', payload)\r\n        }else{\r\n            await axios.put('http://localhost:8081/api/v1/sessions/' + id, payload)\r\n        }\r\n    } catch (error) {\r\n        console.log('Error sending put/post request')\r\n    }\r\n}\r\n\r\nexport default sendSessionToServer","import { React, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport sendSessionToServer from './sendSessionToServer'\r\n\r\nexport default function CreateOrUpdateSession({ session, editMode }) {\r\n    let [sessionLength, setSessionLength] = useState('')\r\n    let [sessionRating, setSessionRating] = useState('')\r\n    let [sleepLength, setSleepLength] = useState('')\r\n    let [moodRating, setMoodRating] = useState('')\r\n    const history = useHistory()\r\n\r\n    let handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        if (editMode){\r\n            await sendSessionToServer('put', sessionLength,sessionRating,sleepLength,moodRating,session.SessionID,session.dateMilliseconds)\r\n        }else{\r\n            await sendSessionToServer('post',sessionLength,sessionRating,sleepLength,moodRating)\r\n        }\r\n        \r\n        if (editMode) {\r\n            // sends the user back a page to the edit \r\n            history.push('/sessions')\r\n        }else{\r\n            // resets state to '' so that the inputs clear after form submit\r\n            setSessionLength('')\r\n            setSessionRating('')\r\n            setSleepLength('')\r\n            setMoodRating('')\r\n        }\r\n        \r\n        \r\n\r\n    }\r\n    return (\r\n        <div className=\"create\">\r\n            {editMode && <h2>Edit Session</h2>}\r\n            {!editMode && <h2>Add a New Meditation Session</h2>}\r\n            <form onSubmit={handleSubmit}>\r\n                <label>Session Length in Minutes</label>\r\n                <input\r\n                    type=\"number\"\r\n                    required\r\n                    min=\"0\"\r\n                    placeholder=\"e.g. 10\"\r\n                    value = {sessionLength}\r\n                    onChange={(e)=>setSessionLength(e.target.value)}\r\n                />\r\n                <label>Rate Your Session 1-5</label>\r\n                <input \r\n                    type=\"number\"\r\n                    min=\"1\"\r\n                    max=\"5\"\r\n                    placeholder=\"e.g. 4\"\r\n                    value={sessionRating}\r\n                    onChange={(e)=>setSessionRating(e.target.value)}\r\n                />\r\n                <label>Hours Slept Last Night</label>\r\n                <input \r\n                    type=\"number\"\r\n                    min=\"0\"\r\n                    placeholder=\"e.g. 8\"\r\n                    value={sleepLength}\r\n                    onChange={(e)=>setSleepLength(e.target.value)}\r\n                />\r\n                <label>Rate Your Mood 1-5</label>\r\n                <input \r\n                    type=\"number\"\r\n                    min=\"1\"\r\n                    max=\"5\"\r\n                    placeholder=\"e.g. 5\"\r\n                    value={moodRating}\r\n                    onChange={(e)=>setMoodRating(e.target.value)}\r\n                />\r\n                {editMode && <button>Update Session</button>}\r\n                {!editMode && <button>Add Session</button>}\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Home() {\r\n    return (\r\n        <div>\r\n            <h1>Welcome to my react app</h1>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <div className='not-found'>\r\n            <h2>Page Not Found</h2>\r\n        </div>\r\n    )\r\n}\r\n","import getHumanReadableDate from './getHumanReadableDate'\r\nimport { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport CreateOrUpdateSession from './CreateOrUpdateSession'\r\nimport axios from 'axios'\r\n\r\nexport default function DisplaySingleSession({ session }) {\r\n    const history = useHistory()\r\n    let [isEditMode, setIsEditMode] = useState(false)\r\n    let handleDelete = () => {\r\n        axios.delete('http://localhost:8081/api/v1/sessions/' + session.SessionID)\r\n        history.push('/sessions')\r\n    }\r\n    return (\r\n        <div>\r\n            {!isEditMode && \r\n            <div className=\"single-session\">\r\n                <h2>{getHumanReadableDate(session.dateMilliseconds)}</h2>\r\n                {session.sessionLength && <p>You Meditated for {session.sessionLength} Minutes</p>}\r\n                {session.sessionRating && <p>You Rated your session a {session.sessionRating}/5</p>}\r\n                {session.sleepLength && <p>You Slept for {session.sleepLength} Hours the Night Before</p>}\r\n                {session.moodRating && <p>You Rated Your Mood a {session.moodRating}/5</p>}\r\n                <button onClick={()=>setIsEditMode(true)}>Edit</button><button onClick={handleDelete}>Delete</button>\r\n            </div>}\r\n            {isEditMode && <CreateOrUpdateSession session={session} editMode={true}/>}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport useFetch from './useFetch'\r\nimport NotFound from './NotFound'\r\nimport DisplaySingleSession from './DisplaySingleSession'\r\n\r\nexport default function SessionDetails() {\r\n    let { id } = useParams()\r\n    const { data: session, isLoading, error } = useFetch('http://localhost:8081/api/v1/sessions/' + id)\r\n    return (\r\n        <div className=\"session-details\">\r\n            {isLoading && <div>Loading...</div>}\r\n            {error && <NotFound />}\r\n            {session && <DisplaySingleSession session={session.Item}/>}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\nimport Sessions from './Sessions'\nimport Navbar from './Navbar'\nimport CreateOrUpdateSession from './CreateOrUpdateSession'\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport Home from './Home'\nimport SessionDetails from './SessionDetails'\n\nlet App = () => {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <div className=\"Sessions\">\n          <Switch>\n            <Route exact path='/'>\n              <Home />\n            </Route>\n            <Route exact path='/sessions'>\n              <Sessions />\n            </Route>\n            <Route exact path='/create'>\n              <CreateOrUpdateSession editMode={false}/>\n            </Route>\n            <Route exact path='/sessions/:id'>\n              <SessionDetails />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}